// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Profile.API.Data.Pii;

#nullable disable

namespace Profile.API.Data.Pii.Migrations
{
    [DbContext(typeof(PiiDbContext))]
    [Migration("20250827113315_RemoveRedundantMigrationConfigs")]
    partial class RemoveRedundantMigrationConfigs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pii", "citext");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Profile.API.Pii.Models.PersonProfile", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("CurrentAddress")
                        .HasColumnType("text")
                        .HasColumnName("current_address");

                    b.Property<string>("FullName")
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("Gender")
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.Property<DateTimeOffset?>("LastModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("PrimaryPhone")
                        .HasColumnType("text")
                        .HasColumnName("primary_phone");

                    b.HasKey("UserId")
                        .HasName("person_profiles_pkey");

                    b.ToTable("person_profiles", "pii");
                });

            modelBuilder.Entity("Profile.API.Pii_Old.Models.AliasOwnerMap", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AliasId")
                        .HasColumnType("uuid")
                        .HasColumnName("alias_id");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("alias_owner_map_pkey");

                    b.HasIndex(new[] { "AliasId" }, "ix_alias_owner_map_alias_id")
                        .IsUnique()
                        .HasDatabaseName("ix_alias_owner_map_alias_id");

                    b.HasIndex(new[] { "UserId" }, "ix_alias_owner_map_user_id")
                        .IsUnique()
                        .HasDatabaseName("ix_alias_owner_map_user_id");

                    b.ToTable("alias_owner_map", "pii");
                });
#pragma warning restore 612, 618
        }
    }
}
