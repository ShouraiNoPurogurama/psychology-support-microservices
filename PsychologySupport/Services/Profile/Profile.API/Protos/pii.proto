syntax = "proto3";

package pii;

import "google/protobuf/timestamp.proto";

option csharp_namespace = "Pii.API.Protos";

//=========================
//========= API ===========
//=========================

service PiiService {
  //Trả thông tin PII theo subject_ref (UUID string)
  rpc ResolvePersonInfoBySubjectRef (ResolvePersonInfoBySubjectRefRequest)
      returns (ResolvePersonInfoBySubjectRefResponse);

  rpc ResolveAliasIdBySubjectRef (ResolveAliasIdBySubjectRefRequest)
      returns (ResolveAliasIdBySubjectRefResponse);

  //Tra subject_ref từ alias_id (UUID string)
  rpc ResolveSubjectRefByAliasId (ResolveSubjectRefByAliasIdRequest)
      returns (ResolveSubjectRefByAliasIdResponse);

  //Tra subject_ref từ user_id (UUID string)
  rpc ResolveSubjectRefByUserId (ResolveSubjectRefByUserIdRequest)
      returns (ResolveSubjectRefByUserIdResponse);

  //Tra user_id từ subject_ref (nội bộ)
  rpc ResolveUserIdBySubjectRef (ResolveUserIdBySubjectRefRequest)
      returns (ResolveUserIdBySubjectRefResponse);

  //Tra patient_id từ alias_id (public domain ở Profile, nhưng PII có thể facade nếu cần)
  rpc ResolvePatientIdByAliasId (ResolvePatientIdByAliasIdRequest)
      returns (ResolvePatientIdByAliasIdResponse);

  rpc EnsureSubjectRef (EnsureSubjectRefRequest) returns (EnsureSubjectRefResponse);
}

//=========================
//======== MESSAGES =======
//=========================

//----- SubjectRef <-> AliasId -----
message ResolveSubjectRefByAliasIdRequest {
  string alias_id = 1; //UUID string
}

message ResolveSubjectRefByAliasIdResponse {
  optional string subject_ref = 1; //UUID string; null nếu không tìm thấy
}

message ResolveAliasIdBySubjectRefRequest {
  string subject_ref = 1; //UUID string
}

message ResolveAliasIdBySubjectRefResponse {
  optional string alias_id = 1; //UUID string; null nếu không tìm thấy
}


message ResolveSubjectRefByUserIdRequest {
  string user_id = 1; //UUID string
}

message ResolveSubjectRefByUserIdResponse  {
  optional string subject_ref = 1; //UUID string; empty nếu không tìm thấy
}

//----- UserId <-> SubjectRef (internal) -----
message ResolveUserIdBySubjectRefRequest {
  string subject_ref = 1; //UUID string
}

message ResolveUserIdBySubjectRefResponse {
  string user_id = 1; //UUID string; empty nếu không tìm thấy
}

//----- PatientId từ AliasId -----
message ResolvePatientIdByAliasIdRequest {
  string alias_id = 1; //UUID string
}

message ResolvePatientIdByAliasIdResponse {
  optional string patient_id = 1; //UUID string; empty nếu không tìm thấy
}

//----- PersonInfo theo SubjectRef -----
message ResolvePersonInfoBySubjectRefRequest {
  string subject_ref = 1; //UUID string
}

message ResolvePersonInfoBySubjectRefResponse {
  string user_id = 1;
  string full_name = 2;
  UserGender gender = 3;
  google.protobuf.Timestamp birth_date = 4;
  ContactInfo contact_info = 5;
}

message EnsureSubjectRefRequest {
  string user_id = 1;
  optional PersonSeedDto person_seed = 2;
}

message PersonSeedDto {
  optional string full_name = 1;
  optional UserGender gender = 2;
  optional google.protobuf.Timestamp birth_date = 3; // ISO 8601 format
  optional ContactInfo contact_info = 4;
}


message EnsureSubjectRefResponse {
  string subject_ref = 1;
}

//----- Common/Nested -----
message ContactInfo {
  string email = 1;
  string phone_number = 2;
  string address = 3;
}

enum UserGender {
  USER_GENDER_UNSPECIFIED = 0;
  USER_GENDER_MALE = 1;
  USER_GENDER_FEMALE = 2;
  USER_GENDER_ELSE = 3;
}
