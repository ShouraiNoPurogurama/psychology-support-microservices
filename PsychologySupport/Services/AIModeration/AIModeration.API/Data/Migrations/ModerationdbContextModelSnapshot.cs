// <auto-generated />
using System;
using System.Collections.Generic;
using AIModeration.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AIModeration.API.Data.Migrations
{
    [DbContext(typeof(ModerationdbContext))]
    partial class ModerationdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pgcrypto");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AIModeration.API.Models.ModerationAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("Data")
                        .HasColumnType("jsonb")
                        .HasColumnName("data");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("event");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uuid")
                        .HasColumnName("item_id");

                    b.HasKey("Id")
                        .HasName("moderation_audits_pkey");

                    b.HasIndex(new[] { "ItemId", "CreatedAt" }, "idx_moderation_audits_item")
                        .HasDatabaseName("ix_moderation_audits_item_id_created_at");

                    b.ToTable("moderation_audits", (string)null);
                });

            modelBuilder.Entity("AIModeration.API.Models.ModerationItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ContentHash")
                        .HasColumnType("text")
                        .HasColumnName("content_hash");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DecidedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("decided_at");

                    b.Property<string>("DecidedBy")
                        .HasColumnType("text")
                        .HasColumnName("decided_by");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("PolicyVersion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("policy_version")
                        .HasDefaultValueSql("'v1'::text");

                    b.PrimitiveCollection<List<string>>("Reasons")
                        .HasColumnType("text[]")
                        .HasColumnName("reasons");

                    b.Property<string>("Scores")
                        .HasColumnType("jsonb")
                        .HasColumnName("scores");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'pending'::text");

                    b.Property<Guid>("TargetId")
                        .HasColumnType("uuid")
                        .HasColumnName("target_id");

                    b.Property<string>("TargetType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("target_type");

                    b.HasKey("Id")
                        .HasName("moderation_items_pkey");

                    b.HasIndex(new[] { "ContentHash" }, "idx_moderation_items_hash")
                        .HasDatabaseName("ix_moderation_items_content_hash");

                    b.HasIndex(new[] { "TargetType", "TargetId" }, "idx_moderation_items_lookup")
                        .HasDatabaseName("ix_moderation_items_target_type_target_id");

                    b.HasIndex(new[] { "Status", "LastModified" }, "idx_moderation_items_status")
                        .IsDescending(false, true)
                        .HasDatabaseName("ix_moderation_items_status_last_modified");

                    b.HasIndex(new[] { "TargetType", "TargetId", "ContentHash" }, "uq_moderation_items_snapshot")
                        .IsUnique()
                        .HasDatabaseName("ix_moderation_items_target_type_target_id_content_hash");

                    b.ToTable("moderation_items", (string)null);
                });

            modelBuilder.Entity("AIModeration.API.Models.ModerationAudit", b =>
                {
                    b.HasOne("AIModeration.API.Models.ModerationItem", "Item")
                        .WithMany("ModerationAudits")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("moderation_audits_item_id_fkey");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("AIModeration.API.Models.ModerationItem", b =>
                {
                    b.Navigation("ModerationAudits");
                });
#pragma warning restore 612, 618
        }
    }
}
