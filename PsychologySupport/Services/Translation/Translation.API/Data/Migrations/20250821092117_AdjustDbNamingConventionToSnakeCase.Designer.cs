// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Translation.API.Data;

#nullable disable

namespace Translation.API.Data.Migrations
{
    [DbContext(typeof(TranslationDbContext))]
    [Migration("20250821092117_AdjustDbNamingConventionToSnakeCase")]
    partial class AdjustDbNamingConventionToSnakeCase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Translation.API.Models.TranslatableField", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("field_name");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("table_name");

                    b.HasKey("Id")
                        .HasName("pk_translatable_fields");

                    b.HasIndex("TableName", "FieldName")
                        .HasDatabaseName("idx_TranslatableFields_Table_Field");

                    b.ToTable("TranslatableFields", "public");
                });

            modelBuilder.Entity("Translation.API.Models.Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsStable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_stable");

                    b.Property<string>("Lang")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("lang");

                    b.Property<DateTimeOffset?>("LastModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified");

                    b.Property<string>("TextKey")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text_key");

                    b.Property<string>("TranslatedValue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("translated_value");

                    b.HasKey("Id")
                        .HasName("pk_translations");

                    b.HasIndex("TextKey", "Lang")
                        .IsUnique()
                        .HasDatabaseName("uq_Translations_TextKey_Lang");

                    b.ToTable("Translations", "public");
                });
#pragma warning restore 612, 618
        }
    }
}
