name: Deploy to VPS on push

on:
  push:
    branches:
      - main

jobs:
  # Sync base secrets (appsettings.json, .env, RSA,...)
  sync-base-secrets:
    uses: ./.github/workflows/sync-secrets.yml
    secrets: inherit

  # Sync appsettings.Production.json
  sync-production-appsettings:
    uses: ./.github/workflows/sync-production-appsettings.yml
    secrets: inherit

  # Deploy app (build & up docker)
  deploy:
    runs-on: ubuntu-latest
    needs: [sync-base-secrets, sync-production-appsettings]
    environment: Production
    steps:
      - name: Build & deploy updated microservices
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            cd /home/root/emoease/PsychologySupport

            git reset --hard HEAD
            git pull origin main

            CHANGED=$(git diff --name-only HEAD^ HEAD \
              | grep -E '^PsychologySupport/Services/[^/]+/|^PsychologySupport/ApiGateways/[^/]+' \
              | awk -F/ '{
                  if ($1 == "PsychologySupport" && $2 == "Services") {
                    print tolower($3) ".api"
                  } else if ($1 == "PsychologySupport" && $2 == "ApiGateways") {
                    print tolower($3)
                  }
                }' \
              | sort -u)

            echo "================= DEBUGGING ================="
            echo "*** Changed Microservices: $CHANGED"
            echo "============================================="

            # ---Build all services in parallel (max 5 at a time) ---
            COUNT=0
            MAX_PARALLEL=5
            for svc in $CHANGED; do
              (
                echo "üî® [$(date +%T)] Starting to build $svc"
                if docker compose -f docker-compose-apis.yml build "$svc"; then
                  echo "‚úÖ [$(date +%T)] Successfully built $svc"
                else
                  echo "‚ùå [$(date +%T)] Failed to build $svc"
                fi
              ) &
              COUNT=$((COUNT + 1))
              if [ "$COUNT" -ge "$MAX_PARALLEL" ]; then
                wait
                COUNT=0
              fi
            done
            wait
            echo "=== All builds have been completed ==="

            # --- Up all services in parallel (max 5 at a time) ---
            COUNT=0
            for svc in $CHANGED; do
              (
                echo " [$(date +%T)] Starting $svc"
                if docker compose -f docker-compose-apis.yml up -d "$svc"; then
                  echo " [$(date +%T)] $svc is up and running"
                else
                  echo " [$(date +%T)] Failed to start $svc"
                fi
              ) &
              COUNT=$((COUNT + 1))
              if [ "$COUNT" -ge "$MAX_PARALLEL" ]; then
                wait
                COUNT=0
              fi
            done
            wait

            echo "=== All selected services have been updated successfully ==="

            # docker builder prune -f
            # echo "‚úÖ Docker cache cleaned."
